apiVersion: v1
kind: Template
metadata:
  name: testopenshift-deploy-template
  labels:
    app: testopenshift
objects:

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: claim1
    spec:
      resources:
        requests:
          storage: 1Gi
      accessModes:
        - ReadWriteOnce

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: testopenshift
      labels:
        app: testopenshift
    spec:
      template:
        metadata:
          name: testopenshift
          labels:
            app: testopenshift
        spec:
          containers:
            - name: ${APP_NAME}
              image: ${IMAGE_REG}/${NAMESPACE}/${APP_NAME}:${IMAGE_TAG}
              ports:
                - containerPort: 8080
                  protocol: TCP
              command:
                - uwsgi
              args:
                - uwsgi.ini
              resources:
                requests:
                  cpu: 200m
                  memory: 512Mi
                limits:
                  cpu: 500m
                  memory: 1024Mi
              env:
                - name: VAR1
                  valueFrom:
                    secretKeyRef:
                      name: test-secret
                      key: username
                - name: CMVAR1
                  valueFrom:
                    configMapKeyRef:
                      name: test-configmap
                      key: VAR1
              volumeMounts:
                - name: config
                  mountPath: /app/volumes/nginx_conf
                - name: data
                  mountPath: /app/volumes
          volumes:
            - name: config
              configMap:
                name: nginxconfig
                items:
                  - key: someconf.conf
                    path: nginx.conf
            - name: data
              persistentVolumeClaim:
                claimName: claim1
      replicas: 1
      strategy:
        type: Rolling
      paused: false
  - apiVersion: v1
    kind: Service
    metadata:
      name: testopenshift
      labels:
        app: testopenshift
    spec:
      ports:
        - name: somename
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: testopenshift

  - apiVersion: v1
    kind: Secret
    metadata:
      name: test-secret
    stringData:
      username: someusername3
      password: somepassword3

  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: test-configmap
    data:
      VAR1: hi
      VAR2: bye




parameters:
  - name: APP_NAME
    description: "name of the app"
    value: testopenshift
    required: true
  - name: IMAGE_REG
    description: "minishift image registry ip and port"
    value: 172.30.1.1:5000
    required: false
  - name: IMAGE_TAG
    description: "tag of the image"
    value: "1"
    required: true
  - name: NAMESPACE
    description: "project name"
    value: testopenshift
    required: true
  - name: NGINX_CONF
    required: true